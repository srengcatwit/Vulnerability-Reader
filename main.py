import tkinter as tk
from tkinter import filedialog, messagebox
from backend import read_csv, validate_data, filter_data
from ui import create_main_window, create_filter_fields, display_results

class VulnerabilityApp:
    def __init__(self, window):
        self.window = window
        self.df = None

        # Create the UI components
        self.create_ui()

    def create_ui(self):
        upload_button = tk.Button(self.window, text="Upload CSV", command=self.upload_file)
        upload_button.pack(pady=10)

        self.filter_fields = create_filter_fields(self.window)
        
        filter_button = tk.Button(self.window, text="Apply Filters", command=self.apply_filters)
        filter_button.pack(pady=10)

    def upload_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("CSV files", "*.csv")])
        if file_path:
            try:
                self.df = read_csv(file_path)
                validate_data(self.df)
                messagebox.showinfo("Success", "File uploaded and validated successfully!")
            except Exception as e:
                messagebox.showerror("Error", str(e))

    def apply_filters(self):
        if self.df is None:
            messagebox.showwarning("Warning", "Please upload a CSV file first.")
            return

        filters = {col: entry.get() for col, entry in self.filter_fields.items()}
        filtered_df = filter_data(self.df, **filters)
        
        display_results(self.window, filtered_df)

def main():
    window = create_main_window()
    app = VulnerabilityApp(window)
    window.mainloop()

if __name__ == "__main__":
    main()
